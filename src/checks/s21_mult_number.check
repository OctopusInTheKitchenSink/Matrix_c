#include "../s21_matrix.h"

#test test1
matrix_t C;
int res = s21_mult_number(NULL, 5, &C);
ck_assert_int_eq(res, 1);

#test test2
matrix_t A, C;
A.rows = 0, A.columns = 3;
int res = s21_mult_number(&A, 5, &C);
ck_assert_int_eq(res, 1);

#test test3
matrix_t A, C;
A.rows = 3, A.columns = 0;
int res = s21_mult_number(&A, 5, &C);
ck_assert_int_eq(res, 1);

#test test4
matrix_t A, C;
s21_create_matrix(2, 3, &A);
for(int i = 0; i < 2; i++)
	for(int j = 0; j < 3; ++j)
		A.matrix[i][j] = (double)rand() / (double)rand() + 0.3;
int res = s21_mult_number(&A, 0, &C);
for(int i = 0; i < 2; i++){
	for(int j = 0; j < 3; ++j)
		ck_assert_int_eq(C.matrix[i][j], 0);
}
s21_remove_matrix(&A);
s21_remove_matrix(&C);
ck_assert_int_eq(0, res);

#test test5
matrix_t A, C;
s21_create_matrix(1, 1, &A);
A.matrix[0][0] = 0.001;
int res = s21_mult_number(&A, 1000, &C);
ck_assert_int_eq(res, 0);
ck_assert_double_eq(1, C.matrix[0][0]);
s21_remove_matrix(&A);
s21_remove_matrix(&C);

#test test6
matrix_t A, C;
s21_create_matrix(100, 1, &A);
double result[100];
for(int i = 0; i < 100; ++i){
	A.matrix[i][0] = i - 0.15;
	result[i] = (i - 0.15) * 111;
}
int res = s21_mult_number(&A, 111, &C);
ck_assert_int_eq(res, 0);
for(int i = 0; i < 100; ++i)
	ck_assert_double_eq(result[i], C.matrix[i][0]);
s21_remove_matrix(&A);
s21_remove_matrix(&C);

#test test7
matrix_t A, C;
s21_create_matrix(1, 100, &A);
double result[100];
for(int j = 0; j < 100; ++j){
	A.matrix[0][j] = j - 0.26;
	result[j] = (j - 0.26) * 1.23;
}
int res = s21_mult_number(&A, 1.23, &C);
ck_assert_int_eq(res, 0);
for(int j = 0; j < 100; ++j)
	ck_assert_double_eq(result[j], C.matrix[0][j]);
s21_remove_matrix(&A);
s21_remove_matrix(&C);

#test test8
matrix_t A, C;
s21_create_matrix(200, 200, &A);
double result[40000];
int counter = 0;
for(int i = 0; i < 200; ++i)
	for(int j = 0; j < 200; ++j){
		A.matrix[i][j] = i * j + i * 0.145 + j / 0.24;
		result[counter++] = (i * j + i * 0.145 + j / 0.24) * 25.6;
	}
int res = s21_mult_number(&A, 25.6, &C);
ck_assert_int_eq(0, res);
counter = 0;
for(int i = 0; i < 200; ++i)
	for(int j = 0; j < 200; ++j)
		ck_assert_double_eq(C.matrix[i][j], result[counter++]);
s21_remove_matrix(&A);
s21_remove_matrix(&C);